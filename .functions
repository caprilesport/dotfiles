#!/usr/bin/env bash

# open folder if hx called with no arguments
hx() {
  if [[ $# -eq 0 ]]; then
    command hx .
  else
    command hx "$@"
  fi
}

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# ditch the outputs of chemcraft
molv () {
    for file in "$@"; do
        wine /home/vport/.wine/drive_c/Chemcraft/Chemcraft.exe "$file" &> /dev/null &
    done
}

# oneliner to send files and ssh to cluster
sngo() {
  cs "$1" push && sshcd "$1" 
}

# oneliner to optimize a structure with xtb without cluttering the current dir
xtbopt() {
    local file_name="$1"
    mkdir .xtbopt && cp "$file_name" .xtbopt && cd .xtbopt && xtb "$1" --opt && cp xtbopt.xyz .. && cd ..
    molv xtbopt.xyz
}

checkneb() {
    local file_root="$1"
    plot_interp_neb "$file_root.interp" &
    molv "$file_root""_MEP_trj.xyz"
}

trj_to_xyz() {
  trj_file="$1"
  nratoms=$(head "$trj_file" -n 1)
  xyzlength=$((nratoms + 2))
  xyzfile="${trj_file/_trj/}"
  tail -n "$xyzlength" "$trj_file" > "$xyzfile"
}

rga-fzf() {
	RG_PREFIX="rga --files-with-matches"
	local file
	file="$(
		FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
			fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}" \
				--preview-window="70%:wrap"
	)" &&
	echo "opening $file" &&
	xdg-open "$file"
}

cpsc() {
	file="$(find ~/Pictures/Screenshots -type f | sort -k1,1nr | tail -n 1 )"
	# echo $file
	cp $file $1
}

cleantex() {
	rm *.log
	rm *.pdfsync
	rm *.aux
}

pqcd() {
  cd $(pq log $1 | grep Path | awk '{print $2}')
}
